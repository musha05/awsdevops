{"version":3,"file":"static/js/28.c7f48271.chunk.js","mappings":"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","sources":["components/reusableComponents/selectDropDown.js","components/reusableComponents/fileuploads.js","pages/profilematching-page/ProfileMatchingPage.js","pages/profilematching-page/index.js"],"sourcesContent":["import React, {useCallback, useEffect} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst SelectDropDown = ({ valueData, value, onJobChange ,placeholder}) => {\r\n    console.log(valueData,'val')\r\n    useEffect(() => {\r\n      console.log('SelectDropDown mounted');\r\n      return () => {\r\n        console.log('SelectDropDown unmounted');\r\n      };\r\n    }, []);\r\n    const memoizedOnChange = useCallback(\r\n      (event) => {\r\n        if (onJobChange) {\r\n          onJobChange(event);\r\n        }\r\n      },\r\n      [onJobChange]\r\n    );\r\n  \r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n      <InputLabel id=\"demo-simple-select-label\">{placeholder}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={value}\r\n          label={placeholder}\r\n          onChange={memoizedOnChange}\r\n        >\r\n          {valueData && valueData.map((item, index) => (\r\n            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectDropDown;\r\n","import React, { useState } from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport Box from '@mui/material/Box';\r\nimport {CloudUploadOutlined} from '@mui/icons-material';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nconst FileUploads = ({ onFileChange, files }) => {\r\n  const [ setLoading] = useState(false);\r\n\r\n  const beforeUpload = (file) => {\r\n    // console.log('Before Upload:', file);\r\n\r\n    const allowedFormats = [\".doc\", \".docx\", \"application/pdf\"];\r\n\r\n    if (!allowedFormats.includes(file.type)) {\r\n      message.error(\"You can only upload pdf and doc files\");\r\n      return false;\r\n    }\r\n\r\n    const isSizeValid = file.size / 1024 / 1024 < 2;\r\n    if (!isSizeValid) {\r\n      message.error(\"File must be smaller than 2MB!\");\r\n      return false;\r\n    }\r\n\r\n    onFileChange(file);\r\n    setLoading(false);\r\n    return false;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n    } else if (info.file.status === \"done\") {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: '1px dashed #ddd',\r\n        padding: '8px',\r\n        borderRadius: '4px',\r\n        height: '60px',\r\n        width: '60px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <Upload\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n        showUploadList={false}\r\n      >\r\n        {files ? (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%, -50%)',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <PictureAsPdfIcon style={{ fontSize: 32, color: 'green' }} />\r\n            <div\r\n              style={{\r\n                maxWidth: '60px',\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {files.name}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <CloudUploadOutlined style={{ fontSize: 40, color: 'gray' }} />\r\n        )}\r\n      </Upload>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUploads;","import React, { useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Card from '@mui/material/Card';\r\nimport SelectDropDown from '../../components/reusableComponents/selectDropDown';\r\nimport FileUploads from '../../components/reusableComponents/fileuploads';\r\nimport { TextField } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nconst jobDes = [\r\n  { label: 'Database Admin', value: 1 },\r\n  { label: 'UI Developer', value: 2 },\r\n  { label: 'EDI Developer', value: 3 },\r\n];\r\n\r\nconst validationSchema = yup.object().shape({\r\n  JobDetails: yup.string().required('Please select a job'),\r\n  Files: yup.array().min(1, 'Please upload at least one file').required('Please upload at least one file'),\r\n});\r\n\r\nconst ProfileMatchingPage = () => {\r\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesToShow, setEntriesToShow] = useState(10); // Initial value is set to 10\r\n  const [JobDetails, setJobDetails] = useState('');\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [jobError, setJobError] = useState('');\r\n  const [fileError, setFileError] = useState('');\r\n  const [selectedFile1, setSelectedFile1] = useState(null);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [selectedFile3, setSelectedFile3] = useState(null);\r\n  const [selectedFile4, setSelectedFile4] = useState(null);\r\n  const [selectedFile5, setSelectedFile5] = useState(null);\r\n  const [isJobSelected, setIsJobSelected] = useState(false);\r\n  const [rowsData, setRowsData] = useState([]);\r\n\r\n  const createJsonArray = () => {\r\n    const jsonArray = [\r\n      { file1: selectedFile1 },\r\n      { file2: selectedFile2 },\r\n      { file3: selectedFile3 },\r\n      { file4: selectedFile4 },\r\n      { file5: selectedFile5 },\r\n    ];\r\n    console.log(jsonArray);\r\n  };\r\n\r\n  const handleMatchProfiles = () => {\r\n    // Check if a job is selected\r\n    if (!isJobSelected) {\r\n      setJobError('Please select a job');\r\n      return;\r\n    }\r\n\r\n    // Validate form data\r\n    validationSchema\r\n      .validate({\r\n        JobDetails: JobDetails,\r\n        Files: [selectedFile1, selectedFile2, selectedFile3, selectedFile4, selectedFile5],\r\n      })\r\n      .then(() => {\r\n        setJobError('');\r\n        setFileError('');\r\n        console.log('Validation successful');\r\n        // Perform further logic or form submission\r\n        createJsonArray();\r\n      })\r\n      .catch((error) => {\r\n        if (error.path === 'JobDetails') {\r\n          setJobError(error.message);\r\n        } else if (error.path === 'Files') {\r\n          setFileError(error.message);\r\n          console.log(fileError, 'file');\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleJobChange = (event) => {\r\n    const selectedJob = event.target.value;\r\n    setJobDetails(selectedJob);\r\n    setJobError('');\r\n\r\n    const jobDescriptionMap = {\r\n      1: 'Job Description for Database Admin',\r\n      2: 'Job Description for UI Developer',\r\n      3: 'Job Description for EDI Developer',\r\n    };\r\n\r\n    setJobDescription(jobDescriptionMap[selectedJob] || '');\r\n    setIsJobSelected(true);\r\n  };\r\n\r\n  const handleFileChange = (fileNumber, selectedFiles) => {\r\n    // Check if a job is selected before updating file state\r\n    if (!isJobSelected) {\r\n      return;\r\n    }\r\n\r\n    switch (fileNumber) {\r\n      case 1:\r\n        setSelectedFile1(selectedFiles);\r\n        break;\r\n      case 2:\r\n        setSelectedFile2(selectedFiles);\r\n        break;\r\n      case 3:\r\n        setSelectedFile3(selectedFiles);\r\n        break;\r\n      case 4:\r\n        setSelectedFile4(selectedFiles);\r\n        break;\r\n      case 5:\r\n        setSelectedFile5(selectedFiles);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const getRowId = (row) => row.email;\r\n\r\n  const filteredRows = rowsData.filter(\r\n    (row) =>\r\n      (row.usersName &&\r\n        row.usersName.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (row.email &&\r\n        row.email.toLowerCase().includes(searchTerm.toLowerCase())) || \r\n      (row.role &&\r\n        row.role.toLowerCase().includes(searchTerm.toLowerCase())) || \r\n      (row.changePrompt &&\r\n        row.changePrompt.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n  const columns = [\r\n    { field: 'jobDescription', headerName: 'Job Description', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'userName', headerName: 'User Name', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'email', headerName: 'Email', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'matchScore', headerName: 'Match Score', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'profile', headerName: 'Profile', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'analysisReport', headerName: 'Analysis Report', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n  ];\r\n  const CustomPagination = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\r\n      <div>\r\n        {/* Removed Showing 1 to {Math.min(currentPage * (isSmallScreen ? 3 : 5), filteredRows.length)} of {filteredRows.length} entries */}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography style={{ marginRight: '8px' }}>Rows</Typography>\r\n        <TextField\r\n          select\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={entriesToShow}\r\n          onChange={(e) => setEntriesToShow(e.target.value)}\r\n          // style={{ width: '60px' }} // Reduced the width\r\n        >\r\n          {[5, 10, 20].map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {/* <Typography style={{ margin: '0 8px' }}>Entries</Typography> */}\r\n        <Box>\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={Math.ceil(filteredRows.length / entriesToShow)}\r\n            page={currentPage}\r\n            onChange={(event, value) => setCurrentPage(value)}\r\n          />\r\n        </Box>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  \r\n  return (\r\n    <div>\r\n\r\n      <Card variant=\"outlined\">\r\n\r\n        <div>\r\n\r\n\r\n          <Grid container spacing={3} alignItems=\"center\" className='profileMatch' sx={{marginBottom: '10px'}}>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <h3>Profile Match</h3>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              <h3>Upload Resumes</h3>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} className='profile-fileUpload' alignItems=\"center\">\r\n            <Grid item xs={12} sm={12} md={4}>\r\n              <SelectDropDown valueData={jobDes} value={JobDetails} onJobChange={handleJobChange} placeholder=\"Select JOB\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={8} className='upload-sec'>\r\n            <Grid container spacing={2}>\r\n            {[1, 2, 3, 4, 5].map((fileNumber) => (\r\n                <Grid key={fileNumber} item xs={12} sm={12} md={2.4}>\r\n              <FileUploads className='fileUpload' onFileChange={(selectedFiles) => handleFileChange(fileNumber, selectedFiles)}\r\n                    files={\r\n                      fileNumber === 1\r\n                        ? selectedFile1\r\n                        : fileNumber === 2\r\n                        ? selectedFile2\r\n                        : fileNumber === 3\r\n                        ? selectedFile3\r\n                        : fileNumber === 4\r\n                        ? selectedFile4\r\n                        : selectedFile5\r\n                    }\r\n                    disabled={!isJobSelected} />\r\n                    </Grid>\r\n                    ))}\r\n                    </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={5} padding={2}>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"JobDescription\"\r\n                label=\"Job Description\"\r\n\r\n                value={jobDescription}\r\n\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                sx={{ width: '100%' }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container padding={2} paddingLeft={2}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button variant=\"contained\" disableElevation onClick={handleMatchProfiles}>\r\n\r\n                  Match Profiles\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Card>\r\n\r\n      <div style={{ marginTop: \"10px\"}}>\r\n        <Card variant=\"outlined\" marginTop={3}>\r\n          <Grid container paddingLeft={1} paddingRight={1} marginTop={1}>\r\n            <Grid item xs={12} sm={12} md={12} padding={1}>\r\n              <h3>Recent Profile Matches</h3>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} paddingTop={1} marginBottom={2}>\r\n                      <DataGrid\r\n                          rows={filteredRows}\r\n                          columns={columns}\r\n                          pageSize={entriesToShow}\r\n                          autoHeight\r\n                          getRowId={getRowId}\r\n                          disableRowSelectionOnClick\r\n                          disableColumnMenu\r\n                          pagination\r\n                          paginationMode=\"server\"\r\n                          onPageChange={(params) => setCurrentPage(params.page)}\r\n                          components={{\r\n                            Pagination: CustomPagination,\r\n                          }}\r\n                        />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12}></Grid>\r\n          </Grid>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileMatchingPage;","// ** User List Component\r\nimport { Fragment } from 'react'\r\n\r\nimport ProfileMatchingPage from './ProfileMatchingPage'\r\nimport JobAnalysisBreadcrumbs from '../../components/Breadcrumbs'\r\n\r\n\r\nconst ProfileMatchList = () => {\r\n    return (\r\n        <Fragment>\r\n            <JobAnalysisBreadcrumbs title='Profile Matching' data={[{ title: 'Dashboard' }]}/>\r\n\r\n            <div className='app-user-list'>\r\n                <ProfileMatchingPage />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProfileMatchList"],"names":["_ref","valueData","value","onJobChange","placeholder","console","log","useEffect","memoizedOnChange","useCallback","event","_jsx","Box","sx","minWidth","children","_jsxs","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","map","item","index","MenuItem","onFileChange","files","setLoading","useState","border","padding","borderRadius","height","width","display","flexDirection","alignItems","justifyContent","overflow","position","Upload","beforeUpload","file","includes","type","message","error","size","info","status","showUploadList","style","top","left","transform","textAlign","PictureAsPdfIcon","fontSize","color","maxWidth","whiteSpace","textOverflow","name","CloudUploadOutlined","jobDes","validationSchema","yup","shape","JobDetails","required","Files","min","ProfileMatchingPage","isSmallScreen","setIsSmallScreen","searchTerm","setSearchTerm","currentPage","setCurrentPage","entriesToShow","setEntriesToShow","setJobDetails","jobDescription","setJobDescription","jobError","setJobError","fileError","setFileError","selectedFile1","setSelectedFile1","selectedFile2","setSelectedFile2","selectedFile3","setSelectedFile3","selectedFile4","setSelectedFile4","selectedFile5","setSelectedFile5","isJobSelected","setIsJobSelected","rowsData","setRowsData","filteredRows","filter","row","usersName","toLowerCase","email","role","changePrompt","Card","variant","Grid","container","spacing","className","marginBottom","xs","sm","md","SelectDropDown","selectedJob","target","fileNumber","FileUploads","selectedFiles","handleFileChange","disabled","TextField","margin","multiline","rows","paddingLeft","Button","disableElevation","onClick","handleMatchProfiles","validate","then","createJsonArray","jsonArray","file1","file2","file3","file4","file5","catch","path","marginTop","paddingRight","paddingTop","DataGrid","columns","field","headerName","flex","headerClassName","pageSize","autoHeight","getRowId","disableRowSelectionOnClick","disableColumnMenu","pagination","paginationMode","onPageChange","params","page","components","Pagination","CustomPagination","Typography","marginRight","select","e","option","count","Math","ceil","length","ProfileMatchList","Fragment","JobAnalysisBreadcrumbs","title","data"],"sourceRoot":""}