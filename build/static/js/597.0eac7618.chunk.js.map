{"version":3,"file":"static/js/597.0eac7618.chunk.js","mappings":"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","sources":["pages/users/UserEdit.js","pages/users/UserDelete.js","pages/users/UserTable.js","pages/users/index.js"],"sourcesContent":["// EditUserModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst EditUserModal = ({ open, onClose, onSave, initialData }) => {\r\n  const [formData, setFormData] = useState({\r\n    userName: initialData.usersName,\r\n    email: initialData.email,\r\n    role: initialData.role,\r\n    changePrompt: initialData.changePrompt\r\n  });\r\n\r\n  useEffect(() => {\r\n    \r\n    setFormData({\r\n        userName: initialData.usersName,\r\n        email: initialData.email,\r\n        role: initialData.role,\r\n        changePrompt: initialData.changePrompt\r\n    });\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    onSave(initialData.email, \r\n        formData.userName, \r\n        formData.email,\r\n        formData.role,\r\n        formData.changePrompt);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle style={{ backgroundColor: '#4880FF', color: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        Edit Job\r\n        <IconButton onClick={onClose} style={{ color: 'white' }}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n    <Grid container spacing={1}>\r\n        <Grid item sm={6}>\r\n            <TextField\r\n            label=\"User Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            name=\"User Name\"\r\n            value={formData.userName}\r\n            onChange={handleChange}\r\n            />\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n            <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            />\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n        <TextField\r\n          label=\"Role\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          multiline\r\n          margin=\"normal\"\r\n          name=\"role\"\r\n          value={formData.role}\r\n          onChange={handleChange}\r\n        />\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n        <TextField\r\n          label=\"Change Prompt\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          multiline\r\n          margin=\"normal\"\r\n          name=\"changePrompt\"\r\n          value={formData.changePrompt}\r\n          onChange={handleChange}\r\n        />\r\n        </Grid>\r\n    </Grid>\r\n     \r\n        \r\n        \r\n       \r\n       \r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" size=\"small\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSave} color=\"primary\" variant=\"contained\" size=\"small\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditUserModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditUserModal;","// DeleteJobModal.jsx\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst DeleteUserModal = ({ open, onClose, onDelete, jobName }) => {\r\n  const handleDelete = () => {\r\n    onDelete(jobName);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle style={{ backgroundColor: '#4880FF', color: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '16px' }}>\r\n        Delete Job\r\n        <IconButton onClick={onClose} style={{ color: 'white' }}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent style={{ padding: '16px' }}>\r\n        <p style={{ marginBottom: '16px' }}>Are you sure you want to delete the job \"{jobName}\"?</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleDelete} color=\"primary\" variant=\"contained\">\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nDeleteUserModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  jobName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DeleteUserModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport { CardContent } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditUserModal from './UserEdit';\r\nimport DeleteUserModal from './UserDelete'\r\nimport GlobalVariable from '../../path/global';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\nconst UsersPage = () => {\r\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesToShow, setEntriesToShow] = useState(10); // Initial value is set to 10\r\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n  const [selectedUserData, setSelectedUserData] = useState(null);\r\n  const [selectedUserToDelete, setSelectedUserToDelete] = useState(null);\r\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\r\n\r\n  const [rowsData, setRowsData] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  const baseApiUrl = GlobalVariable.BASE_API_URL\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    const handleResize = () => {\r\n      setIsSmallScreen(window.innerWidth <= 600);\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: 'usersName', headerName: 'Users Name', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'email', headerName: 'Email', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'role', headerName: 'Role', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    { field: 'changePrompt', headerName: 'Change Prompt', flex: 1, headerClassName: 'bg-primary text-white text-size' },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      flex: 1,\r\n      renderCell: (params) => (\r\n        <>\r\n          <Tooltip title=\"Edit\" arrow>\r\n            <IconButton\r\n              size=\"small\"\r\n              style={{ marginRight: '8px' }}\r\n              onClick={() => handleEditClick(params.row)}\r\n              className='button-a'\r\n            >\r\n              <EditIcon color=\"primary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {isSmallScreen ? (\r\n            <Tooltip title=\"Delete\" arrow>\r\n             <IconButton\r\n                size=\"small\"\r\n                onClick={() => handleDeleteClick(params.row.email)}\r\n                className='button-a'\r\n              >\r\n                <DeleteIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => handleDeleteClick(params.row.email)}\r\n              className='button-a'\r\n            \r\n            >\r\n              <DeleteIcon color=\"primary\" />\r\n            </IconButton>\r\n          )}\r\n        </>\r\n      ),\r\n      headerClassName: 'bg-primary text-white text-size',\r\n    },\r\n  ];\r\n\r\n  const getRowId = (row) => row.email;\r\n\r\n  const filteredRows = rowsData.filter(\r\n    (row) =>\r\n      (row.usersName &&\r\n        row.usersName.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (row.email &&\r\n        row.email.toLowerCase().includes(searchTerm.toLowerCase())) || \r\n      (row.role &&\r\n        row.role.toLowerCase().includes(searchTerm.toLowerCase())) || \r\n      (row.changePrompt &&\r\n        row.changePrompt.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  const CustomPagination = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\r\n      <div>\r\n        {/* Removed Showing 1 to {Math.min(currentPage * (isSmallScreen ? 3 : 5), filteredRows.length)} of {filteredRows.length} entries */}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography style={{ marginRight: '8px' }}>Rows</Typography>\r\n        <TextField\r\n          select\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={entriesToShow}\r\n          onChange={(e) => setEntriesToShow(e.target.value)}\r\n          // style={{ width: '60px' }} // Reduced the width\r\n        >\r\n          {[5, 10, 20].map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {/* <Typography style={{ margin: '0 8px' }}>Entries</Typography> */}\r\n        <Box>\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={Math.ceil(filteredRows.length / entriesToShow)}\r\n            page={currentPage}\r\n            onChange={(event, value) => setCurrentPage(value)}\r\n          />\r\n        </Box>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // const response = await axios.get(`${baseApiUrl}job_analysis/users`); // Replace with your API endpoint\r\n      // setRowsData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n  \r\n const handleEditClick = (rowData) => {\r\n     setSelectedUserData(rowData);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setEditModalOpen(false);\r\n    setSelectedUserData(null);\r\n  };\r\n\r\n  const handleSaveEditJob = (originalEmail, newUserName, newEmail, newRole, newChangePrompt) => {\r\n    setRowsData((prevRows) =>\r\n      prevRows.map((row) =>\r\n        row.email === originalEmail\r\n          ? { usersName: newUserName, email: newEmail, role: newRole, changePrompt: newChangePrompt }\r\n          : row\r\n      )\r\n    );\r\n    handleEditModalClose();\r\n  };\r\n\r\n  const handleDeleteClick = (userName) => {\r\n    setSelectedUserToDelete(userName);\r\n    setDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteModalClose = () => {\r\n    setSelectedUserToDelete(null);\r\n    setDeleteModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteJob = (userName) => {\r\n    setRowsData((prevRows) => prevRows.filter((row) => row.jobdescriptionName !== userName));\r\n    handleDeleteModalClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Card variant=\"outlined\" sx={{borderRadius: '10px'}}>\r\n      \r\n        <div className='users-table'>\r\n            <Box>\r\n              <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box>\r\n                          <Typography variant='h5' sx={{ fontWeight: '600' }}>\r\n                            User List\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                          <Grid item>\r\n                            <Tooltip title=\"Search Email\" arrow>\r\n                              <TextField\r\n                                label=\"Search\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                value={searchTerm}\r\n                                onChange={(e) => setSearchTerm(e.target.value)}\r\n                                style={{ marginRight: '8px' }}\r\n                              />\r\n                            </Tooltip>\r\n                          </Grid>\r\n                          <Grid item>\r\n                          <Link to=\"/users/add-user\" style={{ textDecoration: 'none' }}>\r\n                            <Tooltip title=\"Add User\" arrow>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                style={{ marginLeft: '8px' }}\r\n                                className='button-t'\r\n                                onClick={() => navigate('/add-user')}\r\n                              >\r\n                                Add User\r\n                              </Button>\r\n                            </Tooltip>\r\n                            </Link>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <div style={{ width: '100%'}}>\r\n                        <DataGrid\r\n                          rows={filteredRows}\r\n                          columns={columns}\r\n                          pageSize={entriesToShow}\r\n                          autoHeight\r\n                          getRowId={getRowId}\r\n                          disableRowSelectionOnClick\r\n                          disableColumnMenu\r\n                          pagination\r\n                          paginationMode=\"server\"\r\n                          onPageChange={(params) => setCurrentPage(params.page)}\r\n                          components={{\r\n                            Pagination: CustomPagination,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              \r\n            </Box>\r\n        </div>\r\n      </Card>\r\n      \r\n      {selectedUserData && (\r\n        <EditUserModal\r\n          open={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          onSave={handleSaveEditJob}\r\n          initialData={selectedUserData}\r\n        />\r\n      )}\r\n      {selectedUserToDelete && (\r\n        <DeleteUserModal\r\n          open={isDeleteModalOpen}\r\n          onClose={handleDeleteModalClose}\r\n          onDelete={handleDeleteJob}\r\n          jobName={selectedUserToDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","// ** User List Component\r\nimport { Fragment } from 'react'\r\n\r\nimport UsersTable from '../users/UserTable'\r\nimport ResBreadcrumbs from '../../components/Breadcrumbs'\r\n\r\n\r\nconst UserList = () => {\r\n    return (\r\n        <Fragment>\r\n            <ResBreadcrumbs title='Users' data={[{ title: 'Dashboard' }]}/>\r\n\r\n            <div className='app-user-list'>\r\n                <UsersTable />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n"],"names":["_ref","open","onClose","onSave","initialData","formData","setFormData","useState","userName","usersName","email","role","changePrompt","useEffect","handleChange","e","name","value","target","prevData","_jsxs","Dialog","maxWidth","fullWidth","children","DialogTitle","style","backgroundColor","color","display","justifyContent","alignItems","_jsx","IconButton","onClick","CloseIcon","DialogContent","Grid","container","spacing","item","sm","TextField","label","variant","margin","onChange","multiline","DialogActions","Button","size","handleSave","onDelete","jobName","padding","marginBottom","handleDelete","UsersPage","isSmallScreen","setIsSmallScreen","searchTerm","setSearchTerm","currentPage","setCurrentPage","entriesToShow","setEntriesToShow","isEditModalOpen","setEditModalOpen","selectedUserData","setSelectedUserData","selectedUserToDelete","setSelectedUserToDelete","isDeleteModalOpen","setDeleteModalOpen","rowsData","setRowsData","navigate","useNavigate","GlobalVariable","BASE_API_URL","fetchUserData","handleResize","window","innerWidth","addEventListener","removeEventListener","columns","field","headerName","flex","headerClassName","renderCell","params","_Fragment","Tooltip","title","arrow","marginRight","handleEditClick","row","className","EditIcon","handleDeleteClick","DeleteIcon","filteredRows","filter","toLowerCase","includes","async","rowData","handleEditModalClose","handleDeleteModalClose","Card","sx","borderRadius","Box","CardContent","xs","Typography","fontWeight","Link","to","textDecoration","marginLeft","width","DataGrid","rows","pageSize","autoHeight","getRowId","disableRowSelectionOnClick","disableColumnMenu","pagination","paginationMode","onPageChange","page","components","Pagination","CustomPagination","marginTop","select","map","option","MenuItem","count","Math","ceil","length","event","EditUserModal","handleSaveEditJob","originalEmail","newUserName","newEmail","newRole","newChangePrompt","prevRows","DeleteUserModal","jobdescriptionName","UserList","Fragment","ResBreadcrumbs","data","UsersTable"],"sourceRoot":""}